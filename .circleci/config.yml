version: 2
jobs:
  test_python:
    working_directory: ~/example_project
    docker:
      - image: circleci/python:3.6.2
      - image: circleci/postgres:9.5.10
        environment:
          POSTGRES_USER: root
          POSTGRES_DB: example_project
    steps:
      - checkout
      - restore_cache:
          key: deps1-{{ .Branch }}-{{ checksum "requirements.txt" }}
      - run:
          name: install python dependencies
          command: |
            python3 -m venv .venv
            . .venv/bin/activate
            pip install -U setuptools
            pip install -r requirements.txt
      - save_cache:
          key: deps1-{{ .Branch }}-{{ checksum "requirements.txt" }}
          paths:
            - ".venv"
      - run:
          name: pylint
          command: |
            . .venv/bin/activate
            example_project/ --load-plugins pylint_django,pylint_mccabe --ignore=migrations,tests -d missing-docstring,invalid-name,no-init,too-many-ancestors,no-member,line-too-long,attribute-defined-outside-init,too-few-public-methods,no-self-use,unused-argument,protected-access,locally-disabled,duplicate-code --reports=n
      - run:
          name: iSort
          command: |
            . .venv/bin/activate
            isort --check-only --diff --quiet --skip-glob=.venv --skip-glob=node_modules --skip-glob=*/migrations/* --skip issue_notify.py
      - run:
          name: tests
          command: |
            . .venv/bin/activate
            python manage.py test

  test_assets:
    working_directory: ~/example_project
    docker:
      - image: circleci/node:8.9.0
    steps:
      - checkout
      - restore_cache:
          key: deps1-{{ .Branch }}-{{ checksum "package.json" }}
      - run:
          name: install npm dependencies
          command: |
            yarn install
      - save_cache:
          key: deps1-{{ .Branch }}-{{ checksum "package.json" }}
          paths:
            - "node_modules"
      - run:
          name: stylelint
          command: |
            yarn run lint:css
      - run:
          name: eslint
          command: |
            yarn run lint:js

workflows:
  version: 2
  test:
    jobs:
      - test_python
      - test_assets
